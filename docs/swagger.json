{
  "swagger": "2.0",
  "info": {
    "description": "This is a server for an inventory management system, built with Go and Gin.",
    "title": "Inventory Management API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Reza Barzegar",
      "url": "https://github.com/RezaBG"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0"
  },
  "host": "localhost:2019",
  "basePath": "/",
  "paths": {
    "/login": {
      "post": {
        "description": "Authenticates a user and returns an access token and refresh token.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Auth"],
        "summary": "Log in a user",
        "parameters": [
          {
            "description": "User Login Credentials",
            "name": "credentials",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user.LoginInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/user.LoginResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/refresh_token": {
      "post": {
        "description": "Issues a new access token in exchange for a valid refresh token.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Auth"],
        "summary": "Refresh access token",
        "parameters": [
          {
            "description": "Refresh Token",
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user.RefreshTokenInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/user.AccessTokenResponse"
            }
          },
          "400": {
            "description": "{\"error\": \"Error message\"}",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "401": {
            "description": "{\"error\": \"Invalid refresh token\"}",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "description": "Creates a new user account with the provided details.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Auth"],
        "summary": "Register a new user",
        "parameters": [
          {
            "description": "User Registration Info",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user.CreateUserInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      }
    }
  },
  "definitions": {
    "user.AccessTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        }
      }
    },
    "user.CreateUserInput": {
      "type": "object",
      "required": ["email", "name", "password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "minLength": 8
        }
      }
    },
    "user.LoginInput": {
      "type": "object",
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "user.LoginResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "user.RefreshTokenInput": {
      "type": "object",
      "required": ["refreshToken"],
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "description": "Type \"Bearer\" followed by a space and a valid JWT token.",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
